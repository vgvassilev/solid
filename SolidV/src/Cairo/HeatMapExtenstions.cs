/*
 * $Id$
 * It is part of the SolidOpt Copyright Policy (see Copyright.txt)
 * For further details see the nearest License.txt
 */
using System;
using System.Collections;
using System.Collections.Generic;
using Cairo;

namespace SolidV.Cairo
{
  using Cairo = global::Cairo;

  public static class HeatMapExtensions
  {
    public static void HeatMap(this Context context, double X, double Y, HeatMapData data, int Width, int Height,
                               double blurFactor = 0.85, double Alpha = 0.5, byte[] colorScheme = null) {
      if (colorScheme == null)
        colorScheme = context.GenColorScheme();

      var temp_s = new ImageSurface(Format.ARGB32, Width, Height);
      var temp_c = new Context(temp_s);
      // Draw map
      RadialGradient pat = null;
      double last_r = -1;
      foreach (var item in data) {
        double x = X / Width + 0.5 + item.Point.X;
        double y = Y / Height + 0.5 + item.Point.Y;
        double r = item.Height;

        if (last_r != r) {
          pat = new RadialGradient (r, r, 2, r, r, r * blurFactor);
          pat.AddColorStop(0, new Color (0, 0, 0, 1));
          pat.AddColorStop(1, new Color (0, 0, 0, 0));
          last_r = r;
        }

        temp_c.IdentityMatrix ();
        temp_c.Translate (x - r, y - r);
        temp_c.Save ();
        temp_c.Rectangle (0, 0, 2 * r, 2 * r);
        temp_c.Clip ();
        temp_c.SetSource (pat);
        temp_c.Mask (pat);
        temp_c.Restore ();
      }
      if (pat != null) pat.Dispose ();

      // Recolor alpha to colorscheme
      int stride = temp_s.Stride;
      byte[] data_image = temp_s.Data;
      int data_size = data_image.Length;
      int i = 0;
      while (i < data_size) {
        byte b = data_image[i + 3];
        data_image[i] = colorScheme [b * 4];
        data_image[i + 1] = colorScheme [b * 4 + 1];
        data_image[i + 2] = colorScheme [b * 4 + 2];
        i += 4;
      }
      temp_s = new ImageSurface(data_image, Format.ARGB32, Width, Height, stride);
      context.SetSourceSurface(temp_s, 0, 0);
      context.Rectangle (0, 0, Width, Height);
      context.PaintWithAlpha(Alpha);
      //context.Paint();
    }

    public static byte[] GenColorScheme(this Context context)
    {
      return context.GenColorScheme(
        new KeyValuePair<double, Color>(0.25, new Color(0, 0, 1)),
        new KeyValuePair<double, Color>(0.55, new Color(0, 1, 0)),
        new KeyValuePair<double, Color>(0.85, new Color(1, 1, 0)),
        new KeyValuePair<double, Color>(1.00, new Color(1, 0, 0))
/*
        new KeyValuePair<double, Color>(0.75, new Color(0, 0, 1)),
        new KeyValuePair<double, Color>(0.85, new Color (0, 1, 1)),
        new KeyValuePair<double, Color>(0.95, new Color (0, 1, 0)),
        new KeyValuePair<double, Color>(1.00, new Color(0, 0.5, 0))
*/
      );
    }

    public static byte[] GenColorScheme(this Context context, params KeyValuePair<double, Color>[] ColorStops)
    {
      using (var surface = new ImageSurface(Format.ARGB32, 256, 1)) {
        var ctxt = new Context(surface);
        var pat = new LinearGradient(0, 0, 256, 1);
        foreach (KeyValuePair<double, Color> colorStop in ColorStops)
          pat.AddColorStop(colorStop.Key, colorStop.Value);
        ctxt.SetSource(pat);
        ctxt.Rectangle(0, 0, 256, 1);
        ctxt.Paint();
        return surface.Data;
      }
    }

    public static readonly byte[] ColorSchemeClassic = {
255,237,237,0,0, 255,224,224,0,0, 255,209,209,0,0, 255,193,193,0,0, 255,176,176,0, 255,159,159,0, 255,142,142,0, 255,126,126,0, 255,110,110,0, 255,94,94,0, 255,81,81,0, 255,67,67,0, 255,56,56,0, 255,46,46,0, 255,37,37,0, 255,29,29,0, 255,23,23,0, 255,18,18,0, 255,14,14,0, 255,11,11,0, 255,8,8,0, 255,6,6,0, 255,5,5,0, 255,3,3,0, 255,2,2,0, 255,2,2,0, 255,1,1,0, 255,1,1,0, 255,0,0,0, 255,0,0,0, 255,0,0,0, 255,0,0,0, 255,0,0,0, 255,0,0,0, 255,0,0,0, 255,0,0,0, 255,1,0,0, 255,4,0,0, 255,6,0,0, 255,10,0,0, 255,14,0,0, 255,18,0,0, 255,22,0,0, 255,26,0,0, 255,31,0,0, 255,36,0,0, 255,41,0,0, 255,45,0,0, 255,51,0,0, 255,57,0,0, 255,62,0,0, 255,68,0,0, 255,74,0,0, 255,81,0,0, 255,86,0,0, 255,93,0,0, 255,99,0,0, 255,105,0,0, 255,111,0,0, 255,118,0,0, 255,124,0,0, 255,131,0,0, 255,137,0,0, 255,144,0,0, 255,150,0,0, 255,156,0,0, 255,163,0,0, 255,169,0,0, 255,175,0,0, 255,181,0,0, 255,187,0,0, 255,192,0,0, 255,198,0,0, 255,203,0,0, 255,208,0,0, 255,213,0,0, 255,218,0,0, 255,222,0,0, 255,227,0,0, 255,232,0,0, 255,235,0,0, 255,238,0,0, 255,242,0,0, 255,245,0,0, 255,247,0,0, 255,250,0,0, 255,251,0,0, 253,252,0,0, 250,252,1,0, 248,252,2,0, 244,252,2,0, 241,252,3,0, 237,252,3,0, 233,252,3,0, 229,252,4,0, 225,252,4,0, 220,252,5,0, 216,252,5,0, 211,252,6,0, 206,252,7,0, 201,252,7,0, 197,252,8,0, 191,251,8,0, 185,249,9,0, 180,247,9,0, 174,246,10,0, 169,244,11,0, 164,242,11,0, 158,240,12,0, 151,238,13,0, 146,236,14,0, 140,233,14,0, 134,231,15,0, 128,228,16,0, 122,226,17,0, 116,223,18,0, 110,221,19,0, 105,218,20,0, 99,216,21,0, 93,214,22,0, 88,211,23,0, 82,209,24,0, 76,207,25,0, 71,204,26,0, 66,202,28,0, 60,200,30,0, 55,198,31,0, 50,196,33,0, 45,194,34,0, 40,191,35,0, 36,190,37,0, 31,188,39,0, 27,187,40,0, 23,185,43,0, 19,184,44,0, 15,183,46,0, 12,182,48,0, 9,181,51,0, 6,181,53,0, 3,180,55,0, 1,180,57,0, 0,180,60,0, 0,180,62,0, 0,180,65,0, 0,181,68,0, 0,182,70,0, 0,182,74,0, 0,183,77,0, 0,184,80,0, 0,184,84,0, 0,186,88,0, 0,187,92,0, 0,188,95,0, 0,190,99,0, 0,191,104,0, 0,193,108,0, 0,194,112,0, 0,196,116,0, 0,198,120,0, 0,200,125,0, 0,201,129,0, 0,203,134,0, 0,205,138,0, 0,207,143,0, 0,209,147,0, 0,211,151,0, 0,213,156,0, 0,215,160,0, 0,216,165,0, 0,219,171,0, 0,222,178,0, 0,224,184,0, 0,227,190,0, 0,229,197,0, 0,231,203,0, 0,233,209,0, 0,234,214,0, 0,234,220,0, 0,234,225,0, 0,234,230,0, 0,234,234,0, 0,234,238,0, 0,234,242,0, 0,234,246,0, 0,234,248,0, 0,234,251,0, 0,234,254,0, 0,234,255,0, 0,232,255,0, 0,228,255,0, 0,224,255,0, 0,219,255,0, 0,214,254,0, 0,208,252,0, 0,202,250,0, 0,195,247,0, 0,188,244,0, 0,180,240,0, 0,173,236,0, 0,164,232,0, 0,156,228,0, 0,147,222,0, 0,139,218,0, 0,130,213,0, 0,122,208,0, 0,117,205,0, 0,112,203,0, 0,107,199,0, 0,99,196,0, 0,93,193,0, 0,86,189,0, 0,78,184,0, 0,71,180,0, 0,65,175,0, 0,58,171,0, 0,52,167,0, 0,46,162,0, 0,40,157,0, 0,35,152,0, 0,30,147,0, 0,26,142,0, 0,22,136,0, 0,18,131,0, 0,15,126,0, 0,12,120,0, 0,9,115,0, 1,8,110,0, 1,6,106,0, 1,5,101,0, 2,4,97,0, 3,4,92,0, 4,5,89,0, 5,5,85,0, 6,6,82,0, 7,7,79,0, 8,8,77,0, 10,10,77,0, 12,12,77,0, 14,14,76,0, 16,16,74,0, 19,19,73,0, 21,21,72,0, 24,24,71,0, 26,26,69,0, 29,29,70,0, 32,32,69,0, 35,35,68,0, 37,37,67,0, 40,40,67,0, 42,42,65,0, 44,44,65,0, 46,46,64,0, 48,48,63,0, 49,50,62,0, 51,51,61,0, 53,52,61,0};

    public static readonly byte [] ColorSchemeFire = {
255,255,255,0,
255,255,253,0,
255,255,250,0,
255,255,247,0,
255,255,244,0,
255,255,241,0,
255,255,238,0,
255,255,234,0,
255,255,231,0,
255,255,227,0,
255,255,223,0,
255,255,219,0,
255,255,214,0,
255,255,211,0,
255,255,206,0,
255,255,202,0,
255,255,197,0,
255,255,192,0,
255,255,187,0,
255,255,183,0,
255,255,178,0,
255,255,172,0,
255,255,167,0,
255,255,163,0,
255,255,157,0,
255,255,152,0,
255,255,147,0,
255,255,142,0,
255,255,136,0,
255,255,132,0,
255,255,126,0,
255,255,121,0,
255,255,116,0,
255,255,111,0,
255,255,106,0,
255,255,102,0,
255,255,97,0,
255,255,91,0,
255,255,87,0,
255,255,82,0,
255,255,78,0,
255,255,74,0,
255,255,70,0,
255,255,65,0,
255,255,61,0,
255,255,57,0,
255,255,53,0,
255,255,50,0,
255,255,46,0,
255,255,43,0,
255,255,39,0,
255,255,38,0,
255,255,34,0,
255,255,31,0,
255,255,29,0,
255,255,26,0,
255,255,25,0,
255,254,23,0,
255,251,22,0,
255,250,22,0,
255,247,23,0,
255,245,23,0,
255,242,24,0,
255,239,24,0,
255,236,25,0,
255,232,25,0,
255,229,26,0,
255,226,26,0,
255,222,27,0,
255,218,27,0,
255,215,28,0,
255,210,28,0,
255,207,29,0,
255,203,29,0,
255,199,30,0,
255,194,30,0,
255,190,31,0,
255,186,31,0,
255,182,32,0,
255,176,32,0,
255,172,33,0,
255,168,34,0,
255,163,34,0,
255,159,35,0,
255,154,35,0,
255,150,36,0,
255,145,36,0,
255,141,37,0,
255,136,37,0,
255,132,38,0,
255,128,39,0,
255,124,39,0,
255,119,40,0,
255,115,40,0,
255,111,41,0,
255,107,41,0,
255,103,42,0,
255,99,42,0,
255,95,43,0,
255,92,44,0,
255,89,44,0,
255,85,45,0,
255,81,45,0,
255,79,46,0,
255,76,47,0,
255,72,47,0,
255,70,48,0,
255,67,48,0,
255,65,49,0,
255,63,50,0,
255,60,50,0,
255,59,51,0,
255,57,51,0,
255,55,52,0,
255,55,53,0,
255,53,53,0,
253,54,54,0,
253,54,54,0,
251,55,55,0,
250,56,56,0,
248,56,56,0,
247,57,57,0,
246,57,57,0,
244,58,58,0,
242,59,59,0,
240,59,59,0,
239,60,60,0,
238,61,61,0,
235,61,61,0,
234,62,62,0,
232,62,62,0,
229,63,63,0,
228,64,64,0,
226,64,64,0,
224,65,65,0,
222,66,66,0,
219,66,66,0,
218,67,67,0,
216,67,67,0,
213,68,68,0,
211,69,69,0,
209,69,69,0,
207,70,70,0,
205,71,71,0,
203,71,71,0,
200,72,72,0,
199,73,73,0,
196,73,73,0,
194,74,74,0,
192,74,74,0,
190,75,75,0,
188,76,76,0,
186,76,76,0,
183,77,77,0,
181,78,78,0,
179,78,78,0,
177,79,79,0,
175,80,80,0,
173,80,80,0,
170,81,81,0,
169,82,82,0,
166,82,82,0,
165,83,83,0,
162,83,83,0,
160,84,84,0,
158,85,85,0,
156,85,85,0,
154,86,86,0,
153,87,87,0,
150,87,87,0,
149,88,88,0,
147,89,89,0,
146,90,90,0,
144,91,91,0,
142,92,92,0,
142,94,94,0,
141,95,95,0,
140,96,96,0,
139,98,98,0,
138,99,99,0,
136,100,100,0,
135,101,101,0,
135,103,103,0,
134,104,104,0,
133,105,105,0,
133,107,107,0,
132,108,108,0,
131,109,109,0,
132,111,111,0,
131,112,112,0,
130,113,113,0,
130,114,114,0,
130,116,116,0,
130,117,117,0,
130,118,118,0,
129,119,119,0,
130,121,121,0,
130,122,122,0,
130,123,123,0,
130,124,124,0,
131,126,126,0,
131,127,127,0,
130,128,128,0,
131,129,129,0,
132,131,131,0,
132,132,132,0,
133,133,133,0,
134,134,134,0,
135,135,135,0,
136,136,136,0,
138,138,138,0,
139,139,139,0,
140,140,140,0,
141,141,141,0,
142,142,142,0,
143,143,143,0,
144,144,144,0,
145,145,145,0,
147,147,147,0,
148,148,148,0,
149,149,149,0,
150,150,150,0,
151,151,151,0,
152,152,152,0,
153,153,153,0,
154,154,154,0,
155,155,155,0,
156,156,156,0,
157,157,157,0,
158,158,158,0,
159,159,159,0,
160,160,160,0,
160,160,160,0,
161,161,161,0,
162,162,162,0,
163,163,163,0,
164,164,164,0,
165,165,165,0,
166,166,166,0,
167,167,167,0,
167,167,167,0,
168,168,168,0,
169,169,169,0,
170,170,170,0,
170,170,170,0,
171,171,171,0,
172,172,172,0,
173,173,173,0,
173,173,173,0,
174,174,174,0,
175,175,175,0,
175,175,175,0,
176,176,176,0,
176,176,176,0,
177,177,177,0,
177,177,177,0};

    public static readonly byte [] ColorSchemeOMG = {
255,255,255,0,
255,254,254,0,
255,253,253,0,
255,251,251,0,
255,250,250,0,
255,249,249,0,
255,247,247,0,
255,246,246,0,
255,244,244,0,
255,242,242,0,
255,241,241,0,
255,239,239,0,
255,237,237,0,
255,235,235,0,
255,233,233,0,
255,231,231,0,
255,229,229,0,
255,227,227,0,
255,226,226,0,
255,224,224,0,
255,222,222,0,
255,220,220,0,
255,217,217,0,
255,215,215,0,
255,213,213,0,
255,210,210,0,
255,208,208,0,
255,206,206,0,
255,204,204,0,
255,202,202,0,
255,199,199,0,
255,197,197,0,
255,194,194,0,
255,192,192,0,
255,189,189,0,
255,188,188,0,
255,185,185,0,
255,183,183,0,
255,180,180,0,
255,178,178,0,
255,176,176,0,
255,173,173,0,
255,171,171,0,
255,169,169,0,
255,167,167,0,
255,164,164,0,
255,162,162,0,
255,160,160,0,
255,158,158,0,
255,155,155,0,
255,153,153,0,
255,151,151,0,
255,149,149,0,
255,147,147,0,
255,145,145,0,
255,143,143,0,
255,141,141,0,
255,139,139,0,
255,137,137,0,
255,136,136,0,
255,134,134,0,
255,132,132,0,
255,131,131,0,
255,129,129,0,
255,128,128,0,
255,127,127,0,
255,127,127,0,
255,126,126,0,
255,125,125,0,
255,125,125,0,
255,124,124,0,
255,123,122,0,
255,123,122,0,
255,122,121,0,
255,122,121,0,
255,121,120,0,
255,120,119,0,
255,119,118,0,
255,119,118,0,
255,118,116,0,
255,117,116,0,
255,117,115,0,
255,115,114,0,
255,115,114,0,
255,114,113,0,
255,114,112,0,
255,113,111,0,
255,113,111,0,
255,112,110,0,
255,111,108,0,
255,111,108,0,
255,110,107,0,
255,110,107,0,
255,109,105,0,
255,109,105,0,
255,108,104,0,
255,107,104,0,
255,107,102,0,
255,106,102,0,
255,106,101,0,
255,105,101,0,
255,104,99,0,
255,104,99,0,
255,103,98,0,
255,103,98,0,
255,102,97,0,
255,102,96,0,
255,101,96,0,
255,101,96,0,
255,100,94,0,
255,100,94,0,
255,99,93,0,
255,99,92,0,
255,98,91,0,
255,98,91,0,
255,97,90,0,
255,97,89,0,
255,96,89,0,
255,96,89,0,
255,95,88,0,
255,95,88,0,
255,94,86,0,
255,93,86,0,
255,93,85,0,
255,93,85,0,
255,92,85,0,
255,92,84,0,
255,91,83,0,
255,91,83,0,
255,90,82,0,
255,90,82,0,
255,89,81,0,
255,89,82,0,
255,89,80,0,
255,89,80,0,
255,89,79,0,
255,89,79,0,
255,88,79,0,
255,88,79,0,
255,87,78,0,
255,87,78,0,
255,87,78,0,
255,87,77,0,
255,87,77,0,
255,86,77,0,
255,86,77,0,
255,85,76,0,
255,85,76,0,
255,85,75,0,
255,85,76,0,
255,85,75,0,
255,85,76,0,
255,84,75,0,
255,84,75,0,
255,84,75,0,
255,84,75,0,
255,85,75,0,
255,84,75,0,
255,84,75,0,
255,83,74,0,
255,83,75,0,
255,83,75,0,
255,84,75,0,
255,83,75,0,
255,83,75,0,
255,83,75,0,
255,83,75,0,
255,83,76,0,
255,83,76,0,
255,83,76,0,
255,83,76,0,
255,83,76,0,
255,83,76,0,
255,83,76,0,
255,83,76,0,
255,83,77,0,
255,84,78,0,
255,83,78,0,
255,84,79,0,
255,84,78,0,
255,84,79,0,
255,83,79,0,
255,84,80,0,
255,83,80,0,
255,84,81,0,
255,85,82,0,
255,85,82,0,
255,85,83,0,
255,85,83,0,
255,85,84,0,
255,85,84,0,
255,86,85,0,
255,86,85,0,
255,87,87,0,
254,89,89,0,
254,91,92,0,
253,92,93,0,
252,94,96,0,
251,96,98,0,
251,97,100,0,
249,99,103,0,
249,100,105,0,
248,102,108,0,
247,104,111,0,
246,105,113,0,
245,107,116,0,
244,109,119,0,
243,110,122,0,
242,112,125,0,
241,113,127,0,
240,115,130,0,
239,117,134,0,
238,118,136,0,
237,120,140,0,
236,121,142,0,
235,123,145,0,
234,124,148,0,
233,126,151,0,
232,127,154,0,
232,129,157,0,
230,130,159,0,
230,132,162,0,
229,133,165,0,
228,135,168,0,
227,136,170,0,
227,138,173,0,
226,139,176,0,
225,140,178,0,
224,142,181,0,
223,143,183,0,
223,144,185,0,
223,146,188,0,
222,147,190,0,
221,148,192,0,
221,150,195,0,
220,151,197,0,
219,152,199,0,
219,153,201,0,
219,154,202,0,
219,156,205,0,
218,157,207,0,
217,158,208,0,
217,159,210,0,
217,160,211,0,
217,161,213,0,
216,162,214,0,
216,163,216,0,
216,164,217,0,
215,165,218,0,
216,166,219,0,
215,166,220,0,
215,167,222,0,
215,168,223,0,
215,169,223,0,
215,170,224,0,
215,170,225,0};

    public static readonly byte [] ColorSchemePBJ = {
41,10,89,0,
41,10,89,0,
42,10,89,0,
42,10,89,0,
42,10,88,0,
43,10,88,0,
43,9,88,0,
43,9,88,0,
44,9,88,0,
44,9,88,0,
45,10,89,0,
46,10,88,0,
46,9,88,0,
47,9,88,0,
47,9,88,0,
47,9,88,0,
48,8,88,0,
48,8,87,0,
49,8,87,0,
49,8,87,0,
49,7,87,0,
50,7,87,0,
50,7,87,0,
51,7,86,0,
51,6,86,0,
53,7,86,0,
53,7,86,0,
54,7,86,0,
54,6,85,0,
55,6,85,0,
55,6,85,0,
56,5,85,0,
56,5,85,0,
57,5,84,0,
57,5,84,0,
58,4,84,0,
59,4,84,0,
59,5,84,0,
60,4,84,0,
60,4,84,0,
61,4,84,0,
61,4,83,0,
62,3,83,0,
63,3,83,0,
63,3,83,0,
64,3,82,0,
64,3,82,0,
65,3,82,0,
66,3,82,0,
67,4,82,0,
68,4,82,0,
69,4,82,0,
69,4,81,0,
70,4,81,0,
71,4,81,0,
71,4,80,0,
72,4,80,0,
73,4,80,0,
73,4,79,0,
75,5,80,0,
76,5,80,0,
77,5,79,0,
77,5,79,0,
78,5,79,0,
79,5,78,0,
80,5,78,0,
80,5,78,0,
80,5,77,0,
81,5,77,0,
83,6,76,0,
83,6,76,0,
84,6,76,0,
85,6,75,0,
86,6,75,0,
87,6,74,0,
88,6,74,0,
88,6,73,0,
89,6,73,0,
91,7,73,0,
92,7,73,0,
93,7,72,0,
94,7,72,0,
94,7,71,0,
95,7,71,0,
96,7,70,0,
96,7,70,0,
97,7,69,0,
99,9,70,0,
100,9,69,0,
101,10,69,0,
102,10,68,0,
103,11,67,0,
104,11,67,0,
105,12,66,0,
106,13,66,0,
107,14,66,0,
108,15,65,0,
109,16,64,0,
110,16,64,0,
111,17,63,0,
112,18,62,0,
113,18,61,0,
114,19,61,0,
115,20,60,0,
118,22,60,0,
119,22,59,0,
120,22,58,0,
120,23,58,0,
121,24,57,0,
122,25,56,0,
124,26,55,0,
125,27,54,0,
127,29,54,0,
128,30,54,0,
130,31,53,0,
131,32,52,0,
132,33,51,0,
133,34,50,0,
134,35,49,0,
135,36,48,0,
137,38,48,0,
138,39,47,0,
140,40,46,0,
141,41,46,0,
142,42,45,0,
143,42,44,0,
144,43,43,0,
145,44,42,0,
146,45,42,0,
149,47,41,0,
150,48,41,0,
151,49,40,0,
152,50,39,0,
153,51,38,0,
154,52,38,0,
155,53,37,0,
157,55,36,0,
159,57,36,0,
160,57,35,0,
160,58,34,0,
162,59,33,0,
163,60,33,0,
164,61,32,0,
165,62,31,0,
167,63,30,0,
168,65,30,0,
169,66,29,0,
170,67,29,0,
172,68,28,0,
173,69,27,0,
174,70,26,0,
175,71,26,0,
176,71,25,0,
178,73,25,0,
179,74,24,0,
180,75,24,0,
181,76,23,0,
182,77,23,0,
183,78,23,0,
184,79,22,0,
186,80,22,0,
187,81,21,0,
188,82,21,0,
189,83,21,0,
190,83,20,0,
191,84,20,0,
192,85,19,0,
192,86,19,0,
193,87,18,0,
194,87,18,0,
196,89,18,0,
196,90,18,0,
197,90,18,0,
198,90,18,0,
199,91,18,0,
200,92,18,0,
201,93,18,0,
202,93,18,0,
203,94,18,0,
204,96,19,0,
204,96,19,0,
205,97,19,0,
206,98,19,0,
207,99,19,0,
208,99,19,0,
209,100,19,0,
210,100,19,0,
211,100,19,0,
212,102,20,0,
213,103,20,0,
214,103,20,0,
214,104,20,0,
215,105,20,0,
215,105,20,0,
216,106,20,0,
217,107,20,0,
218,107,20,0,
219,108,20,0,
220,109,21,0,
221,109,21,0,
222,110,21,0,
222,111,21,0,
223,111,21,0,
224,112,21,0,
225,113,21,0,
226,113,21,0,
227,114,21,0,
227,114,21,0,
228,115,22,0,
229,116,22,0,
229,116,22,0,
230,117,22,0,
231,117,22,0,
231,118,22,0,
232,119,22,0,
233,119,22,0,
234,120,22,0,
234,120,22,0,
235,121,22,0,
236,121,22,0,
237,122,23,0,
237,122,23,0,
238,123,23,0,
239,124,23,0,
239,124,23,0,
240,125,23,0,
240,125,23,0,
241,126,23,0,
241,126,23,0,
242,127,23,0,
243,127,23,0,
243,128,23,0,
244,128,24,0,
244,128,24,0,
245,129,24,0,
246,129,24,0,
246,130,24,0,
247,130,24,0,
247,131,24,0,
248,131,24,0,
249,131,24,0,
249,132,24,0,
250,132,24,0,
250,133,24,0,
250,133,24,0,
250,133,24,0,
251,134,24,0,
251,134,25,0,
252,135,25,0,
252,135,25,0,
253,135,25,0,
253,136,25,0,
253,136,25,0,
254,136,25,0,
254,136,25,0,
255,137,25,0};

    public static readonly byte [] ColorSchemePgaitch = {
255,254,165,0,
255,254,164,0,
255,253,163,0,
255,253,162,0,
255,253,161,0,
255,252,160,0,
255,252,159,0,
255,252,157,0,
255,251,156,0,
255,251,155,0,
255,251,153,0,
255,250,152,0,
255,250,150,0,
255,250,149,0,
255,249,148,0,
255,249,146,0,
255,249,145,0,
255,248,143,0,
255,248,141,0,
255,248,139,0,
255,247,138,0,
255,247,136,0,
255,246,134,0,
255,246,132,0,
255,246,130,0,
255,245,129,0,
255,245,127,0,
255,245,125,0,
255,244,123,0,
255,244,121,0,
255,243,119,0,
255,243,117,0,
255,242,114,0,
255,242,112,0,
255,241,111,0,
255,241,109,0,
255,240,107,0,
255,240,105,0,
255,239,102,0,
255,239,100,0,
255,238,99,0,
255,238,97,0,
255,237,95,0,
255,237,92,0,
255,236,90,0,
255,237,89,0,
255,236,87,0,
255,235,84,0,
255,235,82,0,
255,234,80,0,
255,233,79,0,
255,233,77,0,
255,232,74,0,
255,231,72,0,
255,230,70,0,
255,230,69,0,
255,229,67,0,
255,228,65,0,
255,227,63,0,
255,226,61,0,
255,225,60,0,
255,225,58,0,
255,224,56,0,
255,223,54,0,
255,222,52,0,
255,222,51,0,
255,221,49,0,
255,220,47,0,
255,219,46,0,
255,218,44,0,
255,216,43,0,
255,215,42,0,
255,214,41,0,
255,213,39,0,
255,212,39,0,
255,211,37,0,
255,209,36,0,
255,208,34,0,
255,208,33,0,
255,206,33,0,
255,205,32,0,
255,204,30,0,
255,202,29,0,
255,201,29,0,
255,199,28,0,
254,199,28,0,
254,199,27,0,
253,198,27,0,
252,197,27,0,
251,196,27,0,
250,195,26,0,
249,195,26,0,
248,194,26,0,
248,193,26,0,
247,192,26,0,
246,192,25,0,
245,191,26,0,
244,190,26,0,
243,189,25,0,
241,188,25,0,
240,187,25,0,
239,187,25,0,
238,186,25,0,
236,185,25,0,
236,184,26,0,
235,183,26,0,
233,182,25,0,
232,181,25,0,
230,181,26,0,
229,180,26,0,
228,179,25,0,
227,178,25,0,
226,177,26,0,
224,176,26,0,
222,176,25,0,
221,175,25,0,
220,173,26,0,
219,172,26,0,
217,171,25,0,
215,170,25,0,
214,170,26,0,
212,169,26,0,
211,167,25,0,
209,166,25,0,
208,166,26,0,
206,165,26,0,
204,163,26,0,
203,162,26,0,
202,161,25,0,
200,161,26,0,
198,159,26,0,
197,158,26,0,
195,157,26,0,
193,157,27,0,
192,155,27,0,
190,154,27,0,
189,153,27,0,
187,152,28,0,
186,151,28,0,
184,150,28,0,
182,149,28,0,
181,148,29,0,
179,147,29,0,
177,146,29,0,
175,144,29,0,
174,144,30,0,
172,142,30,0,
170,141,30,0,
169,140,30,0,
167,139,31,0,
165,138,31,0,
164,137,31,0,
162,136,31,0,
161,135,32,0,
159,134,32,0,
157,133,32,0,
154,132,32,0,
153,131,33,0,
151,130,33,0,
150,129,33,0,
148,127,33,0,
147,127,34,0,
145,126,34,0,
143,124,34,0,
141,123,34,0,
140,122,35,0,
139,121,35,0,
137,120,35,0,
135,119,35,0,
134,118,36,0,
132,117,36,0,
130,116,36,0,
129,115,36,0,
127,113,36,0,
126,113,37,0,
124,112,37,0,
122,111,37,0,
121,110,37,0,
120,109,38,0,
118,108,38,0,
116,107,38,0,
115,105,38,0,
113,104,38,0,
112,104,39,0,
110,103,39,0,
108,102,39,0,
107,101,39,0,
106,100,40,0,
104,99,40,0,
102,98,40,0,
101,96,40,0,
99,96,40,0,
99,96,41,0,
97,94,41,0,
96,93,41,0,
94,92,41,0,
92,91,41,0,
92,90,42,0,
90,90,42,0,
89,89,42,0,
87,87,42,0,
86,86,42,0,
85,86,43,0,
84,85,43,0,
83,84,43,0,
81,83,43,0,
80,82,43,0,
80,82,44,0,
78,80,44,0,
77,80,44,0,
75,79,44,0,
75,78,44,0,
74,78,45,0,
73,76,45,0,
71,75,45,0,
71,75,45,0,
70,74,45,0,
69,74,46,0,
68,73,46,0,
67,72,46,0,
66,71,46,0,
65,71,46,0,
64,69,46,0,
64,69,47,0,
63,68,47,0,
62,67,47,0,
61,67,47,0,
60,66,47,0,
59,65,47,0,
59,65,48,0,
59,64,48,0,
58,63,48,0,
57,63,48,0,
56,62,48,0,
56,62,48,0,
55,61,48,0,
55,61,49,0,
55,60,49,0,
55,60,49,0,
54,59,49,0,
53,58,49,0,
53,57,49,0,
52,57,49,0,
52,57,50,0,
52,56,50,0,
52,56,50,0,
52,56,50,0,
52,55,50,0,
51,54,50,0,
51,53,50,0,
51,53,50,0,
51,52,50,0,
51,53,51,0,
51,53,51,0,
51,52,51,0,
51,52,51,0};
  }
}
